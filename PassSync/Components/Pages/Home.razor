@page "/"
@using PassSync.Components.Components
@using PassSync.Storage

<div class="homeContainer">
    <div>
        @foreach(Password password in Passwords) {
            <div class="passDisp">
                <PasswordDisplay Password=password StateChanged=LoadPasswords />
            </div>
        }
    </div>

    <div>
        <button class="btn btn-primary add-new" @onclick=StartAddNewPassword>
            <i class="bi bi-plus-lg"></i>
        </button>
    </div>
</div>

<Modal @ref=PasswordMaker IsVerticallyCentered=true />

@code {
    private Modal PasswordMaker { get; set; }

    private IEnumerable<Password> Passwords { get; set; } = [];

    protected override async Task OnInitializedAsync() {
        await LoadPasswords();
    }

    private async Task LoadPasswords() {
        Passwords = await PasswordManager.GetAll();
    }

    private async void StartAddNewPassword() {
        Dictionary<string, object> parameters = new() { ["SubmitPressed"] = EventCallback.Factory.Create<Password>(this, SubmitAddNewPassword) };
        await PasswordMaker.ShowAsync<PasswordMaker>(title: "New Password", parameters: parameters);
    }

    private async void SubmitAddNewPassword(Password newPassword) {
        await PasswordManager.Add(newPassword);
        await PasswordMaker.HideAsync();
    }
}
